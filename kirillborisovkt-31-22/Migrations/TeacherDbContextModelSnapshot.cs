// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kirillborisovkt_31_22.Database;

#nullable disable

namespace kirillborisovkt_31_22.Migrations
{
    [DbContext(typeof(TeacherDbContext))]
    partial class TeacherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("kirillborisovkt_31_22.Models.AcademicDegree", b =>
                {
                    b.Property<int>("AcademicDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicDegreeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("degree_name")
                        .HasComment("Название ученой степени");

                    b.HasKey("AcademicDegreeId")
                        .HasName("pk_academic_degree_id");

                    b.ToTable("AcademicDegrees", "university", t =>
                        {
                            t.HasComment("Ученые степени преподавателей");
                        });
                });

            modelBuilder.Entity("kirillborisovkt_31_22.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<int>("HeadTeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("department_name");

                    b.HasKey("DepartmentId")
                        .HasName("pk_department_id");

                    b.HasIndex("HeadTeacherId")
                        .IsUnique();

                    b.ToTable("Departments", "university", t =>
                        {
                            t.HasComment("Кафедры университета");
                        });
                });

            modelBuilder.Entity("kirillborisovkt_31_22.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("position_title");

                    b.HasKey("PositionId")
                        .HasName("pk_position_id");

                    b.ToTable("Positions", "university", t =>
                        {
                            t.HasComment("Должности преподавателей");
                        });
                });

            modelBuilder.Entity("kirillborisovkt_31_22.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("subject_name");

                    b.HasKey("SubjectId")
                        .HasName("pk_subject_id");

                    b.ToTable("Subjects", "university", t =>
                        {
                            t.HasComment("Дисциплины университета");
                        });
                });

            modelBuilder.Entity("kirillborisovkt_31_22.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<int?>("AcademicDegreeId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("TeacherId")
                        .HasName("pk_teacher_id");

                    b.HasIndex("AcademicDegreeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.HasIndex("LastName", "FirstName")
                        .HasDatabaseName("ix_teacher_fullname");

                    b.ToTable("Teachers", "university", t =>
                        {
                            t.HasComment("Преподаватели университета");
                        });
                });

            modelBuilder.Entity("kirillborisovkt_31_22.Models.Workload", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int")
                        .HasColumnName("hours")
                        .HasComment("Количество часов нагрузки");

                    b.Property<int>("WorkloadId")
                        .HasColumnType("int");

                    b.HasKey("TeacherId", "SubjectId")
                        .HasName("pk_workload_composite_id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Workloads", "university", t =>
                        {
                            t.HasComment("Учебная нагрузка");
                        });
                });

            modelBuilder.Entity("kirillborisovkt_31_22.Models.Department", b =>
                {
                    b.HasOne("kirillborisovkt_31_22.Models.Teacher", "HeadTeacher")
                        .WithOne()
                        .HasForeignKey("kirillborisovkt_31_22.Models.Department", "HeadTeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_department_head_teacher");

                    b.Navigation("HeadTeacher");
                });

            modelBuilder.Entity("kirillborisovkt_31_22.Models.Teacher", b =>
                {
                    b.HasOne("kirillborisovkt_31_22.Models.AcademicDegree", "AcademicDegree")
                        .WithMany("Teachers")
                        .HasForeignKey("AcademicDegreeId")
                        .HasConstraintName("fk_teacher_degree");

                    b.HasOne("kirillborisovkt_31_22.Models.Department", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_department");

                    b.HasOne("kirillborisovkt_31_22.Models.Position", "Position")
                        .WithMany("Teachers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_position");

                    b.Navigation("AcademicDegree");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("kirillborisovkt_31_22.Models.Workload", b =>
                {
                    b.HasOne("kirillborisovkt_31_22.Models.Subject", "Subject")
                        .WithMany("Workloads")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workload_subject");

                    b.HasOne("kirillborisovkt_31_22.Models.Teacher", "Teacher")
                        .WithMany("Workloads")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workload_teacher");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("kirillborisovkt_31_22.Models.AcademicDegree", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("kirillborisovkt_31_22.Models.Department", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("kirillborisovkt_31_22.Models.Position", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("kirillborisovkt_31_22.Models.Subject", b =>
                {
                    b.Navigation("Workloads");
                });

            modelBuilder.Entity("kirillborisovkt_31_22.Models.Teacher", b =>
                {
                    b.Navigation("Workloads");
                });
#pragma warning restore 612, 618
        }
    }
}
